name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        vcpkg_triplet: [x64-windows-release, x86-windows, x64-windows, x64-windows-static, x64-windows-static-md, arm64-windows, arm64-windows-static-md, x64-uwp, arm64-uwp, x64-linux-release, x64-linux, x64-osx-release, x64-osx, arm64-osx]
        build_type: [Release]
        include:
          # cl  
          - vcpkg_triplet: x64-windows-release
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: x86-windows
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: x64-windows
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: x64-windows-static
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: x64-windows-static-md
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: arm64-windows
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: arm64-windows-static-md
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: x64-uwp
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest
          - vcpkg_triplet: arm64-uwp
            c_compiler: cl
            cpp_compiler: cl
            os: windows-latest

          # gnu
          - vcpkg_triplet: x64-linux-release
            c_compiler: gcc
            cpp_compiler: g++
            os: ubuntu-latest
          - vcpkg_triplet: x64-linux
            c_compiler: gcc
            cpp_compiler: g++
            os: ubuntu-latest

          # clang
          - vcpkg_triplet: x64-osx-release
            c_compiler: clang
            cpp_compiler: clang++
            os: macos-latest
          - vcpkg_triplet: x64-osx
            c_compiler: clang
            cpp_compiler: clang++
            os: macos-latest
          - vcpkg_triplet: arm64-osx
            c_compiler: clang
            cpp_compiler: clang++
            os: macos-latest

          # Android (with explicit NDK setup)
          - vcpkg_triplet: x64-android
            c_compiler: clang
            cpp_compiler: clang++
            os: ubuntu-latest
            android_abi: x86_64
          - vcpkg_triplet: arm64-android
            c_compiler: clang
            cpp_compiler: clang++
            os: ubuntu-latest
            android_abi: arm64-v8a

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: vcpkg-action
      uses: johnwason/vcpkg-action@v6
      id: vcpkg
      with:
        triplet: ${{ matrix.vcpkg_triplet }}
        cache-key: ${{ matrix.os }}
        revision: master
        token: ${{ github.token }}
        github-binarycache: true

    - name: Set up Android NDK
      if: contains(matrix.vcpkg_triplet, 'android')
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26b

    - name: Configure CMake (Android)
      if: contains(matrix.vcpkg_triplet, 'android')
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_TARGET_TRIPLET=${{ matrix.vcpkg_triplet }} \
          -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=${{ matrix.android_abi }} \
          -DANDROID_PLATFORM=24 \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -S ${{ github.workspace }}

    - name: Configure CMake (Non-Android)
      if: ${{ !contains(matrix.vcpkg_triplet, 'android') }}
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
